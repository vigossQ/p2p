<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.base.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.base.domain.Account">
        <id column="id" property="id"/>
        <result column="tradePassword" property="tradePassword"/>
        <result column="usableAmount" property="usableAmount"/>
        <result column="freezedAmount" property="freezedAmount"/>
        <result column="borrowLimit" property="borrowLimit"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="unReceiveInterest" property="unReceiveInterest"/>
        <result column="unReceivePrincipal" property="unReceivePrincipal"/>
        <result column="unReturnAmount" property="unReturnAmount"/>
        <result column="remainBorrowLimit" property="remainBorrowLimit"/>
    </resultMap>
    <insert id="insert" parameterType="cn.wolfcode.p2p.base.domain.Account">
        INSERT INTO `account` (id, tradePassword, usableAmount, freezedAmount,
                               borrowLimit, version, unReceiveInterest,
                               unReceivePrincipal, unReturnAmount, remainBorrowLimit
        )
        VALUES (#{id}, #{tradePassword}, #{usableAmount}, #{freezedAmount},
                #{borrowLimit}, #{version}, #{unReceiveInterest},
                #{unReceivePrincipal}, #{unReturnAmount}, #{remainBorrowLimit}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.base.domain.Account">
        UPDATE `account`
        SET tradePassword      = #{tradePassword},
            usableAmount       = #{usableAmount},
            freezedAmount      = #{freezedAmount},
            borrowLimit        = #{borrowLimit},
            version            = version + 1,
            unReceiveInterest  = #{unReceiveInterest},
            unReceivePrincipal = #{unReceivePrincipal},
            unReturnAmount     = #{unReturnAmount},
            remainBorrowLimit  = #{remainBorrowLimit}
        WHERE id = #{id} AND version = #{version}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
            id,
            tradePassword,
            usableAmount,
            freezedAmount,
            borrowLimit,
            version,
            unReceiveInterest,
            unReceivePrincipal,
            unReturnAmount,
            remainBorrowLimit
        FROM `account`
        WHERE id = #{id}
    </select>
</mapper>